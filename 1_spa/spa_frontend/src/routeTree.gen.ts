/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as RecipesRouteImport } from "./routes/recipes/route";
import { Route as StaticRouteImport } from "./routes/_static/route";
import { Route as IndexImport } from "./routes/index";
import { Route as RecipesIndexImport } from "./routes/recipes/index";
import { Route as StaticPrivacyImport } from "./routes/_static/privacy";
import { Route as StaticAboutImport } from "./routes/_static/about";
import { Route as RecipesRecipeIdIndexImport } from "./routes/recipes/$recipeId/index";

// Create/Update Routes

const RecipesRouteRoute = RecipesRouteImport.update({
  id: "/recipes",
  path: "/recipes",
  getParentRoute: () => rootRoute,
} as any);

const StaticRouteRoute = StaticRouteImport.update({
  id: "/_static",
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

const RecipesIndexRoute = RecipesIndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => RecipesRouteRoute,
} as any);

const StaticPrivacyRoute = StaticPrivacyImport.update({
  id: "/privacy",
  path: "/privacy",
  getParentRoute: () => StaticRouteRoute,
} as any);

const StaticAboutRoute = StaticAboutImport.update({
  id: "/about",
  path: "/about",
  getParentRoute: () => StaticRouteRoute,
} as any);

const RecipesRecipeIdIndexRoute = RecipesRecipeIdIndexImport.update({
  id: "/$recipeId/",
  path: "/$recipeId/",
  getParentRoute: () => RecipesRouteRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    "/_static": {
      id: "/_static";
      path: "";
      fullPath: "";
      preLoaderRoute: typeof StaticRouteImport;
      parentRoute: typeof rootRoute;
    };
    "/recipes": {
      id: "/recipes";
      path: "/recipes";
      fullPath: "/recipes";
      preLoaderRoute: typeof RecipesRouteImport;
      parentRoute: typeof rootRoute;
    };
    "/_static/about": {
      id: "/_static/about";
      path: "/about";
      fullPath: "/about";
      preLoaderRoute: typeof StaticAboutImport;
      parentRoute: typeof StaticRouteImport;
    };
    "/_static/privacy": {
      id: "/_static/privacy";
      path: "/privacy";
      fullPath: "/privacy";
      preLoaderRoute: typeof StaticPrivacyImport;
      parentRoute: typeof StaticRouteImport;
    };
    "/recipes/": {
      id: "/recipes/";
      path: "/";
      fullPath: "/recipes/";
      preLoaderRoute: typeof RecipesIndexImport;
      parentRoute: typeof RecipesRouteImport;
    };
    "/recipes/$recipeId/": {
      id: "/recipes/$recipeId/";
      path: "/$recipeId";
      fullPath: "/recipes/$recipeId";
      preLoaderRoute: typeof RecipesRecipeIdIndexImport;
      parentRoute: typeof RecipesRouteImport;
    };
  }
}

// Create and export the route tree

interface StaticRouteRouteChildren {
  StaticAboutRoute: typeof StaticAboutRoute;
  StaticPrivacyRoute: typeof StaticPrivacyRoute;
}

const StaticRouteRouteChildren: StaticRouteRouteChildren = {
  StaticAboutRoute: StaticAboutRoute,
  StaticPrivacyRoute: StaticPrivacyRoute,
};

const StaticRouteRouteWithChildren = StaticRouteRoute._addFileChildren(
  StaticRouteRouteChildren,
);

interface RecipesRouteRouteChildren {
  RecipesIndexRoute: typeof RecipesIndexRoute;
  RecipesRecipeIdIndexRoute: typeof RecipesRecipeIdIndexRoute;
}

const RecipesRouteRouteChildren: RecipesRouteRouteChildren = {
  RecipesIndexRoute: RecipesIndexRoute,
  RecipesRecipeIdIndexRoute: RecipesRecipeIdIndexRoute,
};

const RecipesRouteRouteWithChildren = RecipesRouteRoute._addFileChildren(
  RecipesRouteRouteChildren,
);

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "": typeof StaticRouteRouteWithChildren;
  "/recipes": typeof RecipesRouteRouteWithChildren;
  "/about": typeof StaticAboutRoute;
  "/privacy": typeof StaticPrivacyRoute;
  "/recipes/": typeof RecipesIndexRoute;
  "/recipes/$recipeId": typeof RecipesRecipeIdIndexRoute;
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "": typeof StaticRouteRouteWithChildren;
  "/about": typeof StaticAboutRoute;
  "/privacy": typeof StaticPrivacyRoute;
  "/recipes": typeof RecipesIndexRoute;
  "/recipes/$recipeId": typeof RecipesRecipeIdIndexRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/": typeof IndexRoute;
  "/_static": typeof StaticRouteRouteWithChildren;
  "/recipes": typeof RecipesRouteRouteWithChildren;
  "/_static/about": typeof StaticAboutRoute;
  "/_static/privacy": typeof StaticPrivacyRoute;
  "/recipes/": typeof RecipesIndexRoute;
  "/recipes/$recipeId/": typeof RecipesRecipeIdIndexRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | "/"
    | ""
    | "/recipes"
    | "/about"
    | "/privacy"
    | "/recipes/"
    | "/recipes/$recipeId";
  fileRoutesByTo: FileRoutesByTo;
  to: "/" | "" | "/about" | "/privacy" | "/recipes" | "/recipes/$recipeId";
  id:
    | "__root__"
    | "/"
    | "/_static"
    | "/recipes"
    | "/_static/about"
    | "/_static/privacy"
    | "/recipes/"
    | "/recipes/$recipeId/";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  StaticRouteRoute: typeof StaticRouteRouteWithChildren;
  RecipesRouteRoute: typeof RecipesRouteRouteWithChildren;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  StaticRouteRoute: StaticRouteRouteWithChildren,
  RecipesRouteRoute: RecipesRouteRouteWithChildren,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_static",
        "/recipes"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_static": {
      "filePath": "_static/route.tsx",
      "children": [
        "/_static/about",
        "/_static/privacy"
      ]
    },
    "/recipes": {
      "filePath": "recipes/route.tsx",
      "children": [
        "/recipes/",
        "/recipes/$recipeId/"
      ]
    },
    "/_static/about": {
      "filePath": "_static/about.tsx",
      "parent": "/_static"
    },
    "/_static/privacy": {
      "filePath": "_static/privacy.tsx",
      "parent": "/_static"
    },
    "/recipes/": {
      "filePath": "recipes/index.tsx",
      "parent": "/recipes"
    },
    "/recipes/$recipeId/": {
      "filePath": "recipes/$recipeId/index.tsx",
      "parent": "/recipes"
    }
  }
}
ROUTE_MANIFEST_END */
