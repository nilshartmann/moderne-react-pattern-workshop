/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from "./routes/__root"
import { Route as StaticRouteImport } from "./routes/_static/route"
import { Route as IndexImport } from "./routes/index"
import { Route as RecipesIndexImport } from "./routes/recipes/index"
import { Route as StaticPrivacyImport } from "./routes/_static/privacy"
import { Route as StaticAboutImport } from "./routes/_static/about"

// Create/Update Routes

const StaticRouteRoute = StaticRouteImport.update({
  id: "/_static",
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any)

const RecipesIndexRoute = RecipesIndexImport.update({
  id: "/recipes/",
  path: "/recipes/",
  getParentRoute: () => rootRoute,
} as any)

const StaticPrivacyRoute = StaticPrivacyImport.update({
  id: "/privacy",
  path: "/privacy",
  getParentRoute: () => StaticRouteRoute,
} as any)

const StaticAboutRoute = StaticAboutImport.update({
  id: "/about",
  path: "/about",
  getParentRoute: () => StaticRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/"
      path: "/"
      fullPath: "/"
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    "/_static": {
      id: "/_static"
      path: ""
      fullPath: ""
      preLoaderRoute: typeof StaticRouteImport
      parentRoute: typeof rootRoute
    }
    "/_static/about": {
      id: "/_static/about"
      path: "/about"
      fullPath: "/about"
      preLoaderRoute: typeof StaticAboutImport
      parentRoute: typeof StaticRouteImport
    }
    "/_static/privacy": {
      id: "/_static/privacy"
      path: "/privacy"
      fullPath: "/privacy"
      preLoaderRoute: typeof StaticPrivacyImport
      parentRoute: typeof StaticRouteImport
    }
    "/recipes/": {
      id: "/recipes/"
      path: "/recipes"
      fullPath: "/recipes"
      preLoaderRoute: typeof RecipesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface StaticRouteRouteChildren {
  StaticAboutRoute: typeof StaticAboutRoute
  StaticPrivacyRoute: typeof StaticPrivacyRoute
}

const StaticRouteRouteChildren: StaticRouteRouteChildren = {
  StaticAboutRoute: StaticAboutRoute,
  StaticPrivacyRoute: StaticPrivacyRoute,
}

const StaticRouteRouteWithChildren = StaticRouteRoute._addFileChildren(
  StaticRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute
  "": typeof StaticRouteRouteWithChildren
  "/about": typeof StaticAboutRoute
  "/privacy": typeof StaticPrivacyRoute
  "/recipes": typeof RecipesIndexRoute
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute
  "": typeof StaticRouteRouteWithChildren
  "/about": typeof StaticAboutRoute
  "/privacy": typeof StaticPrivacyRoute
  "/recipes": typeof RecipesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  "/": typeof IndexRoute
  "/_static": typeof StaticRouteRouteWithChildren
  "/_static/about": typeof StaticAboutRoute
  "/_static/privacy": typeof StaticPrivacyRoute
  "/recipes/": typeof RecipesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: "/" | "" | "/about" | "/privacy" | "/recipes"
  fileRoutesByTo: FileRoutesByTo
  to: "/" | "" | "/about" | "/privacy" | "/recipes"
  id:
    | "__root__"
    | "/"
    | "/_static"
    | "/_static/about"
    | "/_static/privacy"
    | "/recipes/"
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  StaticRouteRoute: typeof StaticRouteRouteWithChildren
  RecipesIndexRoute: typeof RecipesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  StaticRouteRoute: StaticRouteRouteWithChildren,
  RecipesIndexRoute: RecipesIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_static",
        "/recipes/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_static": {
      "filePath": "_static/route.tsx",
      "children": [
        "/_static/about",
        "/_static/privacy"
      ]
    },
    "/_static/about": {
      "filePath": "_static/about.tsx",
      "parent": "/_static"
    },
    "/_static/privacy": {
      "filePath": "_static/privacy.tsx",
      "parent": "/_static"
    },
    "/recipes/": {
      "filePath": "recipes/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
